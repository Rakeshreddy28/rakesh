                                                                
                                                                ---------------------------------------------------------------------------------------------------------------
1: Set the selinux policy as Enforcing mode in system1 and system2.

Ans:
[root@server0 ~]# vim /etc/selinux/config
SELINUX=enforcing
:wq
[root@server0 ~]#setenforce 1

Exp: Selinux will be in active mode by seting mode to enforcing. idealy a system restart is needed after changing this.
________________________________________________________________________________________________________
2: run custom command 

Configure a custom command with the name "qstat" every one can excute /bin/ps -aux command

Ans:
[root@server6 ~]# vim /etc/bashrc
at last add a line
alias qstat='/usr/bin/ps -aux'
[root@server6 ~]# source /etc/bashrc
[root@server6 ~]# qstat
_________________________________________________________________________________________________________
3: Configure ssh:

Configure SSH service on system1 and system2 so that domain my113t.org should not have ssh access to system1 and system2.
    
Ans:

[root@server0 ~]# yum install openssh*
[root@server0 ~]# vim /etc/hosts.deny
sshd: .my113t.org
:wq
[root@server0 ~]# systemctl enable sshd
[root@server0 ~]# systemctl start sshd

Exp: Above commands will install SSH service in server1.example.com and would reject my113.org  domains to use ssh service.
______________________________________________________________________________________________________________
4:  Configure ipv6

Configure IPV6 on both system1(server1.example.com) and system2(server2.example.com) on eth0 device, this should not effect IPV4 network. In system1 IPV6 should be FDDB:FE2A:AB1E::C0A8:1.In system2  IPV6 should be FFUY:KK1V:RRGW:7YGS and after reboot both IPV4 and IPV6 should be able to communicate.

Ans:
[root@server0 ~]# nmcli connection modify eth0 ipv6.addresses 'fddb:fe2a:ab1e::c0a8:1/64 fddb:fe2a:ab1e::c0a8:fe' ipv6.method manual
[root@server0 ~]# nmcli connection reload
[root@server0 ~]# systemctl restart network
[root@server0 ~]# systemctl reboot

______________________________________________________________________________________________________________
5: Configure Network Teaming

Configure network teaming on eno1 and eno2 in system1 and system2.Configure ip 192.168.0.100 and 192.168.0.200 on both systems so that they can able to communicate with each other.

Ans:
[root@server6 ~]# lab teambridge setup [to add eno1 & eno2 (dont do in exam)]
[root@server6 ~]# ifconfig  [to see the eno1 an eno2 is there ot not]
[root@server6 ~]# nmcli connection add type team con-name team0 ifname team0 config '{"runner": {"name": "activebackup"}}'
[root@server6 ~]# nmcli connection modify team0 ipv4.addresses '192.168.0.100/24'
[root@server6 ~]# nmcli connection modify team0 ipv4.method manual
[root@server6 ~]# nmcli connection add type team-slave con-name team0-port1 ifname eno1 master team0
[root@server6 ~]# nmcli connection add type team-slave con-name team0-port2 ifname eno2 master team0
[root@server6 ~]# nmcli connection up team0
[root@server6 ~]# ifconfig [You will find extra device team0]
[root@server6 ~]# teamdctl team0 state   [Shows runner as active backup]
[root@server6 ~]# ping 192.168.0.10


_____________________________________________________________________________________________________________
6: port forwarding:

Configure PORT FORWARDING incomming connection on port 513/tcp on the firewall to port 132/tcp on machine system2.group11.example.com (desktop2.example.com)

Ans:

[root@server0 ~]# systemctl disable iptables
[root@server0 ~]# systemctl disable ip6tables
[root@server0 ~]# systemctl stop iptables
[root@server0 ~]# systemctl stop ip6tables
[root@server0 ~]# systemctl mask iptables
[root@server0 ~]# systemctl mask ip6tables
[root@server0 ~]# systemctl start firewalld
[root@server0 ~]# systemctl enable firewalld

[root@server0 ~]# firewall-cmd --permanent --add-rich-rule 'rule family=ipv4 source address=172.25.0.10/32 forward-port port=513 protocol=tcp to-port=132'
[root@server0 ~]# firewall-cmd --reload

Exp: Iptables are perminantly stoped first and then All the connections made to port 513 will be redirected to port 132.
_______________________________________________________________________________________________________________
7: COnfigure Mail server

	Configure a null client on system1 and system2 which relay mail through ap1.group11.example.com using group11.example.com domain name on all outgoing mails. 

Ans:
[root@server6 ~]# vim /etc/postfix/main.cf 
myorigin = example.com
inet_interfaces = loopback-only
relayhost = [smtp6.example.com]          [Search for /relayhost Copy line below and write]
local_transport = error: local delivery disabled  [Search for /local_transpot  and write new antry somewhare] 
mynetworks = 127.0.0.0/8, [::1]/128
mydestination =
:wq
[root@server6 ~]# systemctl restart postfix
[root@server6 ~]# systemctl enable postfix
[root@server6 ~]# firewall-cmd --permanent --add-service=smtp
[root@server6 ~]# firewall-cmd --reload

____________________________________________________________________________________________________________
8:  NFS Server: 

Export your "/public" directory via NFS to the group11.example.com domain. Make sure that client in group11.example.com domain should able to read only permission in /public.

Ans:

[root@server6 ~]# yum install nfs*
[root@server6 ~]# systemctl enable  nfs-server.service 
[root@server6 ~]# systemctl start nfs-server.service
[root@server6 ~]# firewall-cmd --permanent --add-service=nfs 
[root@server6 ~]# firewall-cmd --permanent --add-service=rpc-bind 
[root@server6 ~]# firewall-cmd --permanent --add-service=mountd 
[root@server6 ~]# firewall-cmd --reload
[root@server6 ~]# mkdir /public
[root@server6 ~]# vim /etc/exports
/public *.example.com(ro)
[root@server6 ~]# exportfs -rv
go to desktop system and run below command to verify

[root@server6 ~]# showmount -e 172.25.6.11
Export list for 172.25.6.11:
/public *.example.com
[root@server6 ~]#
___________________________________________________________________________________________________________
9: Configure Secure nfs server :
 
   1.Export your "/publicsecure" directory with use kerbores via NFS to the group11.example.com domain. Make sure that client in group11.example.com domain should able to read and write permission in /publicsecre. And create a subdirectory called "publicshare" and publicshare directory owner permission should be nahur. and nahur user should able to read and write. Use keytab for the system1 http://server1.grou11.example.com/pub/materials/system1.keytab.
 2. mount the /public permanently on the /mnt/secure on the system2.
 3. mount the secure nfs share /publicsecure permanently on the /mnt/securepath on
system2 system. verify that user nahur user has read and write access on the /mnt/securepath on
system2.

Ans:

[root@server6 ~]# lab nfskrb5 setup [Do institute not in exam]
[root@server6 ~]# wget -O /etc/krb5.keytab http://classroom.example.com/pub/keytabs/server7.keytab
[root@server6 ~]# vim /etc/sysconfig/nfs
RPCNFSDARGS="-V 4.2"     ------------------->line number 13
[root@server6 ~]# systemctl enable nfs-secure-server.service
[root@server6 ~]# systemctl start nfs-secure-server.service 
[root@server6 ~]# mkdir /publicsecure
[root@server6 ~]# vim /etc/exports
/publicsecure  desktopX.example.com(rw,sec=krb5p)   [If in exam asks for desktop only if not *.example.com(rw,sec=krb5p)

[root@server6 ~]# exportfs -rv

Go to desktop system and run below command to verfy

[root@server6 ~]# showmount -e 172.25.6.11
Export list for 172.25.6.11:
/publicsecure *.example.com
/public       *.example.com

[root@desktop6 ~]# lab nfskrb5 setup   [Dont do in exam]
[root@desktop6 ~]# yum install nfs-utils* -y
[root@desktop6 ~]# wget -O /etc/krb5.keytab http://classroom.example.com/pub/keytabs/desktop6.keytab
[root@desktop6 ~]# systemctl enable nfs-secure.service  [Only nfs-secure]
[root@desktop6 ~]# systemctl restart nfs-secure.service
[root@desktop6 ~]# vim /etc/fstab
server6.example.com:/public		/mnt/secure	       nfs	defaults	0 0
server6.example.com:/publicsecure      /mnt/securepath        nfs     defaults,sec=krb5p,v4.2 0 0
[root@desktop6 ~]# mkdir /mnt/secureshare
[root@desktop6 ~]# mount -a
[root@desktop6 ~]# df -h

----> Go To Server system 
[root@server6 ~]# chown ldapuser6 /publicsecure/publicshare
[root@server6 ~]# chcon -t public_content_t /publicsecure/publicshare

----> Then Go TO client System
[root@desktop6 ~]# mount -a
[root@desktop6 ~]# ssh ldapuserX@localhost
password-kerberos
[ldapuser6@desktop6 ~]$ cd /mnt/securepath
[ldapuser6@desktop6 ~]$ touch file1
____________________________________________________________________________________________________________
10: Configure SAMBA SHARE:

	 Share the directory "/common" via samba. Your Samba server must be a member of "STAFF" workgroup. The share name must be "common".Make sure that browseable must be enabled. The shared must be available to group11.example.com clients only. The user "frank" should have read access to the share with samba password "animous". 

Ans:

[root@server6 ~]# yum install samba*
[root@server6 ~]# systemctl start smb
[root@server6 ~]# systemctl start nmb
[root@server6 ~]# systemctl enable smb.service 
[root@server6 ~]# systemctl enable nmb.service 
[root@server6 ~]# firewall-cmd --permanent --add-service=samba
[root@server6 ~]# firewall-cmd --reload 
[root@server6 ~]# mkdir /common
[root@server6 ~]# semanage fcontext -a -t samba_share_t "/common(/.*)?"
[root@server6 ~]# restorecon -vvFR /common/
[root@server6 ~]# useradd -s /usr/sbin/nologin frank
[root@server6 ~]# smbpasswd -a frank
New SMB password:
Retype new SMB password:
Added user frank.
[root@server6 ~]# vim /etc/samba/smb.conf 
        workgroup = STAFF     [Line number 88]

[common]					[End of the config file]
        comment = Public Stuff
        path = /common
        valid users = frank
        browseable = yes
        hosts allow = 172.25.
[root@server6 ~]# systemctl restart smb
[root@server6 ~]# systemctl restart nmb

------>   IF you want to test go to client system
[root@desktop6 ~]# yum install cifs-utils
[root@desktop6 ~]# mount //172.25.6.11/common /coss -o username=frank
[root@desktop6 ~]# mkdir /coss
[root@desktop6 ~]# mount //172.25.6.11/common /coss -o username=frank
[root@desktop6 ~]# df -Th
______________________________________________________________________________________________________________ 
11: Configure SAMBA SHARE:
 
 1. Share the directory "/secure" via samba. The share name must be "secure". Make sure that browseable must be enabled. The shared must be available to group11.example.com clients only. The user "rob" should have read access to the share with samba password "animous" and user "robby" should have read and write access to the share with samba password "animous".
    Multiuser samba mount:
 2. Mount the samba share permantly on the /mnt/secure mount point on system2 as a
multiuser mount. mount samba share wirh the credentials of user robby user and passrod
animous.


Ans: 
SAMBA MULTI USER SHARE
======================
    
     # mkdir /secure
     # chcon -t samba_share_t /secure/
     # vim /etc/samba/smb.conf 
	[secure]
	comment = Public Stuff
	path = /secure
	public = no
	writable = no
	browseable = yes
	hosts allow = 172.25.
	printable = no
	write list = @robby

    # useradd rob
    # useradd robby
    # smbpasswd -a rob
    # smbpasswd -a robby
    # systemctl restart smb
    # chgrp robby /secure/
    # chmod g+w /secure/
    # systemctl restart nmb
    To test:
    # smbclient //172.25.7.11/secure -U rob
    # smbclient //172.25.7.11/secure -U robby

SAMBA MULTIUSER MOUNT
=====================

    # yum install cifs-utils.x86_64 
    # systemctl enable smb
    # systemctl enable nmb
    # systemctl start smb
    # systemctl start nmb
    # echo "username=robby" > /root/smb-multiuser.txt
    # echo "password=redhat" >> /root/smb-multiuser.txt
    # mkdir /mnt/secure
    # vim /etc/fstab 
//server7/secure	/mnt/secure	cifs	credential=/root/smb-multiuser.txt,multiuser	0 0
    # mount -a
    # cd
    # yum install samba* -y
    # mount -a
    # smbclient -L 172.25.7.11
    # smbclient //172.25.7.11/secure -U robby
    # df -h
    # ls -ld /mnt/secure/

____________________________________________________________________________________________________________
12: Configure "web server":
	
	Configure your system as "web server" for the site http://system1.group11.example.com. Download the web page station.html from http://classroom.example.com/pub/updates/station.html Rename the the downloaded page as "index.html".The site can be accessed by only group11.exampl.com.

Ans: 
[root@server6 Desktop]# yum install httpd*
[root@server6 Desktop]# systemctl restart httpd
[root@server6 Desktop]# systemctl enable httpd
[root@server6 Desktop]# firewall-cmd --permanent --add-service=http
[root@server6 Desktop]# firewall-cmd --reload 
[root@server6 Desktop]# cd /var/www/html/
[root@server6 Desktop]# wget http://classroom.example.com/pub/updates/station.html
[root@server6 Desktop]# ls
[root@server6 Desktop]# mv station.html index.html 
[root@server6 Desktop]# vim /etc/httpd/conf.d/main.conf
<VirtualHost *:80>
  ServerAdmin root@server6.example.com
  DocumentRoot /var/www/html
  ServerName server6.example.com
</VirtualHost>
<Directory "/var/www/html">
  Order Deny,Allow
  Deny from all
  Allow from .group11.example.com
</Directory>
[root@server6 Desktop]# systemctl restart httpd

----> Goto Client
[root@desktop6 ~]# curl -k http://server6.example.com  [Out put should gom in single line]
_____________________________________________________________________________________________________________
13: Configure "web server":

	Create the directory "private" for the DocumentRoot of your webserver. Download the page "host.html" from http://server.group11.example.com/pub/matarials/host.html And move as index.html.It should be accessable to serverx.example.com and not to any other host.

Ans:

[root@server6 private]# mkdir /var/www/html/private
[root@server6 private]# cd /var/www/html/private
[root@server6 private]# wget http://classroom.example.com/pub/updates/host.html
[root@server6 private]# mv host.html index.html
[root@server6 html]# vim /etc/httpd/conf.d/main.conf 
<Directory "/var/www/html/private">
  Order Deny,Allow
  Deny from all
  Allow from serverX.example.com
[root@server6 ~]# systemctl restart httpd

------> Go to client
[root@desktop6 ~]# yum install elinks*
[root@desktop6 ~]# elinks server6.example.com/private

------> Go to foundation system
open firefox
and search for   >  server6.example.com/private

It Should show Forbidden
____________________________________________________________________________________________________________
14: Configure name virtual hosting server:

	Configure the name virtual hosting server for the site http://www1.group11.example.com. Download the page "www.html" from http://server.group11.example.com/pub/materials and copy as index.html under documenRoot "/var/www/virtual". User called rock should able to add some content into /var/www/virtual directory and systemx.example.com should abel to access the virtual hosting.

Ans: 
[root@server6 virtual]# mkdir /var/www/virtual
[root@server6 virtual]# cd /var/www/virtual
[root@server6 virtual]# wget http://classroom.example.com/pub/updates/www.html
[root@server6 virtual]# mv www.html index.html
[root@server6 virtual]# vim /etc/httpd/conf.d/virtual.conf 
<VirtualHost *:80>
  ServerAdmin root@www1.example.com
  Documentroot /var/www/virtual
  ServerName www6.example.com
</VirtualHost>

[root@server6 virtual]# systemctl restart httpd

---> Go to client  open terminal
[root@desktop6 ~]# curl -k http://www6.example.com            [one line output will com]

_____________________________________________________________________________________________________
15: Configure wsgi web server:

        Configure "wsgi" web server site name "webappX.example.com" hosted on port 8999 and download dynamic WSGI conent from http://classroom.example.com/pub/update/weapp.wsgi and stored inside  virtual web server DocumentRoot of your webserver. and donot effect virtual web serevr.

Ans:

[root@server6 Desktop]# yum install mod_wsgi
[root@server6 Desktop]# cd /var/www/virtual/
[root@server6 ~]# firewall-cmd --permanent --add-port=8999/tcp
success
[root@server6 virtual]# firewall-cmd --reload
[root@server6 virtual]# semanage port -l | grep -w http_port_t
[root@server6 virtual]# semanage port -a -t http_port_t -p tcp 8999
[root@server6 virtual]# semanage port -l | grep -w http_port_t
[root@server6 virtual]# wget http://classroom.example.com/pub/updates/webapp.wsgi
[root@server6 virtual]# vim /etc/httpd/conf/httpd.conf
#Listen 12.34.56.78:80                          This line alrady exist
Listen webapp7.example.com:8999                 This line we have to write
Listen 80                                       This line alrady exist
[root@server6 virtual]# vim /etc/httpd/conf.d/webapp.conf
<VirtualHost *:8999>
ServerName webapp6.example.com
WSGIScriptAlias / /var/www/virtual/webapp.wsgi
</VirtualHost>
[root@server6 virtual]# systemctl restart httpd

----> Goto  Client System
----> Open Web browser and search the site
----> webapp6.example.com:8999
___________________________________________________________________________________________________________
16: CONFIGURE "target server":

	configure target server use the this iqn iqn.2014-09.com.example.group11:system1 and 3G backing store device volume group name iscsi_storage. iscsi storage should availabe to sysetm2.group11.example.com sysetm only.

Asn: 

[root@server6 virtual]# yum install targetcli
[root@server6 virtual]# fdisk /dev/vdb      [Create one partion more than 3GB i have created 3G]
[root@server6 virtual]# partprobe 
[root@server6 virtual]# pvcreate /dev/vdb1
[root@server6 virtual]# vgcreate iscsi_storage /dev/vdb1
[root@server6 virtual]# lvcreate -L 3G -n iscsi_lv iscsi_storage 
[root@server6 virtual]# systemctl enable target.service 
[root@server6 virtual]# systemctl start target.service 
[root@server6 virtual]# firewall-cmd --permanent --add-port=3260/tcp
[root@server6 virtual]# firewall-cmd --reload 

[root@server6 virtual]# targetcli 
Warning: Could not load preferences file /root/.targetcli/prefs.bin.
targetcli shell version 2.1.fb34
Copyright 2011-2013 by Datera, Inc and others.
For help on commands, type 'help'.
/> ls
o- / ..................................................................................................... [...]
  o- backstores .......................................................................................... [...]
  | o- block .............................................................................. [Storage Objects: 0]
  | o- fileio ............................................................................. [Storage Objects: 0]
  | o- pscsi .............................................................................. [Storage Objects: 0]
  | o- ramdisk ............................................................................ [Storage Objects: 0]
  o- iscsi ........................................................................................ [Targets: 0]
  o- loopback ..................................................................................... [Targets: 0]                                    
/> backstores/block create block1 /dev/iscsi_storage/iscsi_lv 
Created block storage object block1 using /dev/iscsi_storage/iscsi_lv.
/> iscsi/ create iqn.2014-09.com.example:server6
Created target iqn.2014-09.com.example:server6.
Created TPG 1.
/> iscsi/iqn.2014-09.com.example:server6/tpg1/acls create iqn.2014-09.com.example:desktop6
Created Node ACL for iqn.2014-09.com.example:desktop6
/> iscsi/iqn.2014-09.com.example:server6/tpg1/luns create /backstores/block/block1 
Created LUN 0.
Created LUN 0->0 mapping in node ACL iqn.2014-09.com.example:desktop6
/> iscsi/iqn.2014-09.com.example:server6/tpg1/portals create 172.25.6.11 
Using default IP port 3260
Created network portal 172.25.6.11:3260.
/> ls
o- / ..................................................................................................... [...]
  o- backstores .......................................................................................... [...]
  | o- block .............................................................................. [Storage Objects: 1]
  | | o- block1 .................................... [/dev/iscsi_storage/iscsi_lv (3.0GiB) write-thru activated]
  | o- fileio ............................................................................. [Storage Objects: 0]
  | o- pscsi .............................................................................. [Storage Objects: 0]
  | o- ramdisk ............................................................................ [Storage Objects: 0]
  o- iscsi ........................................................................................ [Targets: 1]
  | o- iqn.2014-09.com.example:server6 ............................................................... [TPGs: 1]
  |   o- tpg1 ........................................................................... [no-gen-acls, no-auth]
  |     o- acls ...................................................................................... [ACLs: 1]
  |     | o- iqn.2014-09.com.example:desktop6 ................................................. [Mapped LUNs: 1]
  |     |   o- mapped_lun0 ............................................................ [lun0 block/block1 (rw)]
  |     o- luns ...................................................................................... [LUNs: 1]
  |     | o- lun0 ................................................. [block/block1 (/dev/iscsi_storage/iscsi_lv)]
  |     o- portals ................................................................................ [Portals: 1]
  |       o- 172.25.6.11:3260 ............................................................................. [OK]
  o- loopback ..................................................................................... [Targets: 0]
/> exit
Global pref auto_save_on_exit=true
Last 10 configs saved in /etc/target/backup.
Configuration saved to /etc/target/saveconfig.json
[root@server6 virtual]# 
_________________________________________________________________________________________________________
17: Configure iscsi client.

	create a new 2024Mb iscsi target on your system1.group11.example.com machine. this target should be called iqn.2014-09.com.example.group11:system1 and assign file system ext4 and mount under /mnt/iscsi directory.

Ans:

[root@desktop6 ~]# yum install iscsi*
Loaded plugins: langpacks
rhel_dvd                                                                                 | 4.1 kB  00:00:00     
Package iscsi-initiator-utils-6.2.0.873-21.el7.x86_64 already installed and latest version
Package iscsi-initiator-utils-iscsiuio-6.2.0.873-21.el7.x86_64 already installed and latest version
Nothing to do
[root@desktop6 ~]# systemctl start iscsi
[root@desktop6 ~]# systemctl enable iscsi
[root@desktop6 ~]# vim /etc/iscsi/initiatorname.iscsi 
InitiatorName=iqn.2014-09.com.example:desktop6
[root@desktop6 ~]# iscsiadm -m discovery -t st -p server6.example.com
172.25.6.11:3260,1 iqn.2014-09.com.example:server6
[root@desktop6 ~]# iscsiadm -m node -T iqn.2014-09.com.example:server6 -p server6.example.com -l
Logging in to [iface: default, target: iqn.2014-09.com.example:server6, portal: 172.25.6.11,3260] (multiple)
Login to [iface: default, target: iqn.2014-09.com.example:server6, portal: 172.25.6.11,3260] successful.
[root@desktop6 ~]# fdisk -l     [Check for /dev/sda]
[root@desktop6 ~]# fdisk /dev/sda 
[Create 2024 mb patition (+2024M)]
[root@desktop6 ~]# partprobe 
[root@desktop6 ~]# mkfs.ext4 /dev/sda1 
[root@desktop6 ~]# mkdir /mnt/iscsi
[root@desktop6 ~]# blkid /dev/sda1 
[Copy UUID and write enty in fstab with UUID as below]
[root@desktop6 ~]# vim /etc/fstab 
UUID=2e8da35d-d037-4768-bc92-bdbc4b37bb5a /mnt/iscsi              ext4    _netdev         0 0
[root@desktop6 ~]# df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/vda1        10G  3.1G  7.0G  31% /
Out put omited.........

[root@desktop6 ~]# mount -a
[root@desktop6 ~]# df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/vda1        10G  3.1G  7.0G  31% /
Output omited........
/dev/sda1       2.0G  6.0M  1.8G   1% /mnt/iscsi
[root@desktop6 ~]# iscsiadm -m node -T iqn.2014-09.com.example:server6 -p server6.example.com -l
[root@desktop6 ~]# init 6
_____________________________________________________________________________________________________________
18: Configure Mariadb.

	Install mariadb database and user root password is animous database sholud access only localhost. create a "Conatins" datebase and restore a data base backup http://server1.group11.example.com/pub/matarials/mariadb.dump. rob user can access "contains" database should be use password is "animous".

Ans: 

[root@server6 ~]# yum groupinstall mariadb mariadb-client
[root@server6 ~]# systemctl start mariadb
[root@server6 ~]# systemctl enable  mariadb
[root@server6 ~]#firewall-cmd --permanent --add-service=mysql
[root@server6 ~]#firewall-cmd --reload
[root@server6 ~]# ss -tulnp| grep mysql
tcp    LISTEN     0      50                     *:3306                  *:*      users:(("mysqld",8370,13))
[root@server6 ~]# vim /etc/my.cnf
[mysqld]      ----> [Under This line]
skip-networking=1
[root@server6 ~]# systemctl restart mariadb
[root@server6 ~]# ss -tulnp| grep mysql
[Now This command should show nothing]
[root@server6 ~]# mysql_secure_installation 
Enter current password for root (enter for none):   [Dont Give anything press enter]
Set root password? [Y/n] y
New password: animous [Give password]
Re-enter new password:  animous   [Retry same passwd] 
Password updated successfully!
Reloading privilege tables..
 ... Success!
Remove anonymous users? [Y/n] y
Disallow root login remotely? [Y/n] y
Remove test database and access to it? [Y/n] y
Reload privilege tables now? [Y/n] y
[root@server6 ~]# mysql -u root -p
Enter password: 
MariaDB [(none)]> create database conatins;
MariaDB [(none)]> exit
[root@server6 ~]# mysql -u root -p conatins < /root/mariadb.dump 
Enter password: 
[root@server6 ~]# mysql -u root -p
MariaDB [conatins]> CREATE USER rob@'%' IDENTIFIED BY 'animous';
MariaDB [conatins]> GRANT SELECT,INSERT,UPDATE,DELETE ON conatins.* TO rob@'%';
______________________________________________________________________________________________________________
20: Script:

	Write the script called /root/script. If you pass an argument as "redhat" it should print "fedora" . If you pass an argument as "fedora" it should print "redhat". If won't pass any argument (or) if you pass another argument other than "redhat" and "fedora"it will print standard error "/root/script redhat|fedora".

[root@server6 ~]# vim /root/script
#!/bin/bash
if [ "$1" = redhat ]
then
echo fedora
elif [ "$1" = fedora ] 
then
echo redhat
else echo "/root/script redhat|fedora"
fi
[root@server6 ~]# chmod 744 /root/script 
cript redhat|fedora
[root@server6 ~]# /root/script asa
/root/script redhat|fedora
[root@server6 ~]# /root/script redhat
fedora
[root@server6 ~]# /root/script fedora
redhat



